
다형성(Polymorphsim)
객체지향개념이란?
여러 가지 형태를 가질 수 있는 능력
-> 한 타입의 참조변수로 여러타입의 객체를 참조할 수 있도록 함.
-> 조상클래스 타입의 참조변수로 자손클래스의 인스턴스를 참조할 수 있다.
부타자참

같은 타입의 인스턴스지만 참조변수의 타입에 따라 사용할 수 있는 멤버의 개수가 다르다


자식의 참조변수에 부모의 인스턴스를 참조할 경우
에러가 발생하는 이유는
실제 인스턴스인 Tv의 멤버 개수보다 참조변수 자막 Tv가 
사용할수 있는 멤버 개수가 더 많기 때문이다.
그래서 이를 허용하지 않았다. 

참조변수가 사용할 수 있는 멤버의 개수는
인스턴스의 멤버개수보다 같거나 적어야 한다.

[참고]
클래스는 상속을 통해서 확장될 수는 있어도
축소될 수는 없다.
즉, 조상 인스턴스의 멤버 개수는 
자손 인스턴스의 멤버 개수보다 항상 적거나 같다.

요약
- 조상타입의 참조변수로 자손타입의 인스턴스를 참조할 수 있다.
- 반대로 자손타입의 참조변수로 조상타입의 인스턴스를 참조할 수는 없다.


다형성
참조변수의 형변환

기본형 변수와 같이 참조변수도 형변환이 가능하다
단, 서로 상속관계에 잇는 클래스 사이에서만 가능하기 때문에
자손타입의 참조변수를  조상타입의 참조변수로,
조상타입의 참조변수를 자손타입의 참조변수로 형변환이 가능하다.

자손타입 -> 조상타입(Up casting) : 형변환 생략가능
자손타입 <- 조상타입(Down casting) : 형변환 생략불가


검사하고 싶은 객체 instanceof 형변환이 가능한지 여부의 Class명
어떤 타입에 대한 instanceof연산의 결과가 
true라는 것은 검사한 타입으로 형 변환이 가능하다.

참조변수와 인스턴스의 연결




















