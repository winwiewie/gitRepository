
명명규칙
자바 파일명: 첫글자는 영문자, 대문자
.java ->   compiler    -> 기계어(.class) 0, 1
클래스명
1. 클래스 이름의 첫 글자는 항상 대문자로 한다
- 변수와 메서드의 이름의 첫 글자는 항상 소문자로 한다
2. 여러 단어로 이루어진 이름은 단어의 첫 글자를 대문자로 한다.
- LastIndexOf, StringBuffer   (낙타 표기법)
3. 상수의 이름은 모두 대문자로 한다. 여러 단어로 이루어진 경우 '_'로 구분한다
- PI, MAX_NUMBER

변수명 -> 식별자(indentitier)
1. 대소문자가 구분되며 길이에 제한이 없다
- true와 True는 서로 다른 것으로 간주한다
2. 예약어를 사용해서는 안 된다
- true는 예약어라서 사용할 수 없지만, True는 가능하다
3. 숫자로 시작해서는 안된다
- top10은 허용하지만, 7up은 허용되지 않는다
4. 특수문자는 '_'와 '$'만을 허용한다
- $harp은 허용되지만, S#arp은 허용되지 않는다

--------------------------------------------------------------------------------------------------------
멤버변수
클래스 내에 포함되어 있는 모든 변수들을 총칭하는 용어
지역변수는 제외

멤버메서드
클래스 내에 포함되어 있는 모든 메서들을 총칭하는 용어

--------------------------------------------------------------------------------------------------------
//상속, 캡슐화, 다형성
// 상속(Inheritance)
//상속이란, 기존의 클래스를 재사용하여 새로운 클래스를 작성하는 것이다
/*
 * 표현식
 class 자식 클래스 extends 부모 클래스{

 }
 부르는 용어
 조상 클래스, 부모 클래스, 상위 클래스
 자손 클래스, 자식 클래스, 하위 클래스, 파생된 클래스
 *
 * 상속을 받는다는 것은 조상 클래스를 확장한다는 의미로 해석할 수도 있으며
 * 이것이 상속에 사용되는 키워드가 extends인 이유이기도 하다
 * - 생성자는 상속되지 않는다. 멤버만 상속된다
 * - 자손 클래스의 멤버 개수는 조상 클래스보다 항상 같거나 많다

객체지향

오버로딩 vs 오버라이딩
오버로딩 : 기존에 없는 새로운 메서드를 정의하는 것(new)
오버라이딩: 상속받은 메서드의 내용을 변경하는 것(change, modify)

--------------------------------------------------------------------------------------------------------
자바 클래스
클래스 - 데이터 함수의 결합
변수 - 하나의 데이터를 저장할 수 있는 공간
배열 - 같은 타입의 여러 데이터를 저장할 수 있는 공간
구조체 - 타입에 관계없이 서로 관련된 데이터들을 저장할 수 있는공간
클래스 - 데이터와 함수의 결합(구조체 + 함수)

클래스 - 사용자 정의 타입(User-defined type)
- 프로그래머가 직접 새로운 타입을 정의할 수 있다.
- 서로 관련된 값을 묶어서 하나의 타입으로 정의한다.
--------------------------------------------------------------------------------------------------------

자바 상속과 다형성
상속(inheritance)
- 기존의 클래스를 재사용하여 새로운 클래스를 작성하는 것이다.
- 두 클래스를 조상과 자손으로 관계를 맺어주는 것
- 자손은 조상의 모든 멤버를 상속받는다
- 자손 클래스의 맴버 개수는 조상 클래스보다 항상 같거나 많다.

표현식
class 자식 클래스 extends 부모 클래스{

}

부르는 용어
조상 클래스, 부모 클래스, 상위 클래스
자손 클래스, 자식 클래스, 하위 클래스, 파생된 클래스

다형성(polymorphism)
- 여러 가지 형태를 가질 수 있는 능력
- 하나의 참조변수로 여러 타입의 객체를 참조할 수 있는것
  즉, 조상타입의 참조변수로 자손타입의 객체를 다룰 수 있는 것이 다형성 	

--------------------------------------------------------------------------------------------------------
패키지, 예외처리
패키지(package)
패키지란 클래스의 묶음이다
패키지에는 클래스 or 인터페이스를 포함시킬 수 있으며,
서로 관련된 클래스끼리 그룹단위로 묵어 놓음으로써
클래스를 효율적으로 관리할 수 있다.

같은 이름의 클래스 일지라도 서로 다른 패키지에 존재하는 것이 가능하므로,
자신만의 패키지 체계를 유지함으로써 다른 개발자가 개발한
클래스 라이브러리의 클래스와 이름이 충돌하는 것을 피할 수 있다.

지금까지는 단순히 클래스 이름으로만 클래스를 구분햇지만
클래스의 실제 이름(full name)은 패키지명을 포함한 것이다.

클래스가 물리적으로 하나의 클래스 파일(.class)인 것과 같이
패키지는 물리적으로 하나의 디렉토리이다.


패키지의 명명규칙
무조건 소문자로 작성한다.

특징
- 패키지는 점(.)을 구분자로 하여 계층구조로 구성할 수 있다 .
- 하나의 소스파일에 첫 번째 문장으로 단 한 번의 패키지 선언만을 허용한다
- 모든 클래스는 반드시 하나의 패키지에 속해야 한다.
- 패키지는 물리적으로 클래스 파일(.class)을 포함하는 하나의 디렉토리이다.

표현식 
package 패키지명;


예외처리(exception hadling)
정의 - 프로그램 실행 시 발생할 수 있는 예외의 발생에 대비한 코드를 작성하는것
목적 - 프로그램 비정상 종료를 막고,정상적인 실행상태를 유지하는것

예외(excaption)  
프로그램 코드에 의해서 수습될 수 있는 다소 미약한 오류
--------------------------------------------------------------------------------------------------------

컬렉션과 제네릭
컬렉션(collection)
-여러 객체(데이터)를 모아 놓은 것을 의미

지네릭스(generice)
다양한 타입의 객체들을 다루는 메서드나 컬렉션 클레스에 컴파일 시의 타입체크를 해주는 기능

--------------------------------------------------------------------------------------------------------
AWT, EVENT, Input/Output, Graphics 및 Thread, Applet, Swing
AWT
Java AWT (Abstract Window Toolkit)는 Java에서 GUI 또는 창 기반 응용 프로그램을 개발하는 API 입니다.
Java AWT 컴퍼넌트는 플랫폼에 의존합니다. 즉, 컴퍼넌트는 operating system의 시야에 따라 표시됩니다. AWT는 헤비 웨이트입니다. 즉, AWT 구성 요소는 OS의 리소스를 사용합니다.
java.awt 패키지 는 , TextField , Label , TextArea , RadioButton, CheckBox , Choice , List 등 , AWT API의 클래스 를 제공합니다 .

Event
객객체의 상태를 변경하는 것을 이벤트라고합니다. 예를 들어, 버튼을 클릭하고 마우스를 드래그하면됩니다. java.awt.event 패키지는 이벤트 처리를위한 많은 이벤트 클래스와 리스너 인터페이스를 제공합니다.

Input/Output, 
자료의 입출력을 도와주는 중간 매개체  ( = 순서가 있는 데이터의 연속적인 흐름)
데이터를 받고 출력하는 작업을 도와주는 중간역활

문자단위로 처리하느냐, 바이트 단위로 처리하느냐에 따라 나눌수 있다.
1) 문자 스트림 - 입력문자 ( Reader)
문자 스트림 - 출력문자 ( Writer )

2) 바이트 스트림 - 입력바이트 ( InputStream )
바이트 스트림 - 출력바이트 ( OutputStream )

Graphics 
도형(선,타원,사각형,다각형)을 그릴 수 잇는 다양한 메서드가 제공된다

Thread 
하나의 프로세스 내부에서 독립적으로 실행되는 하나의 작업 단위를 말한다.
-프로세스는 실행을 위해 메모리로 적재된 하나의 [프로그램]을 말한다.

- 메모리를 할당받아 실행 중인 프로그램을 프로세스라고 합니다.
- 프로세스 내의 명령어 블록으로 시작점과 종료점을 가진다.
- 실행중에 멈출 수 있으며 동시에 수행 가능하다.
- 어떠한 프로그램내에서 특히 프로세스 내에서 실행되는 흐름의 단위.

Applet
애플릿은 작은 어플리케이션이란 뜻으로 웹브라우저를 통해 실행될 수 있는 자바클래스를 말한다. 
애플릿은 main 메서드가 필요하지 않으며 웹브라우저를 통해서 실행된다. 

- 애플릿 관련정보가 포함된 HTML문서를 작성해야한다.
- java.exe가 아닌 웹브라우저를 통해 실행된다.
- public static void main(String args[])이 필요하다.
- 애플릿은 java.applet.Applet을 상속하는 public 클래스이어야 한다.

swing
위도우 기반 응용 프로그램을 만드는 데 사용되는 Java Foundation Classes (JFC)의 일부입니다 . AWT (Abstract Windowing Toolkit) API의 상단에 구축되어 있으며 Java로 작성되었습니다.
AWT와 달리 Java Swing은 플랫폼 독립적이며 가벼운 구성 요소를 제공합니다.

--------------------------------------------------------------------------------------------------------
JAVA Network

네트워크 프로그래밍 이라는 용어 는 여러 장치 (컴퓨터)에서 실행되는 프로그램을 작성하는 것으로, 
장치가 모두 네트워크를 사용하여 서로 연결되어 있습니다.

J2SE API의 java.net 패키지에는 낮은 수준의 통신 세부 정보를 제공하는 클래스 및 인터페이스 모음이 포함되어있어 
문제를 해결하는 데 집중하는 프로그램을 작성할 수 있습니다.

java.net 패키지는 두 가지 공통 네트워크 프로토콜을 지원합니다.

TCP는 전송 제어 프로토콜 (Transmission Control Protocol)의 약자로 두 응용 프로그램간에 안정적인 통신이 가능합니다. 
TCP는 일반적으로 TCP / IP라고하는 인터넷 프로토콜을 통해 사용됩니다.

UDP는 응용 프로그램간에 데이터 패킷을 전송할 수있는 연결없는 프로토콜 인 사용자 데이터 그램 프로토콜 (User Datagram Protocol)의 약자입니다.

--------------------------------------------------------------------------------------------------------
자바 데이터베이스(JDBC)

JDBC(Java Database Connectivity)의 정의
- 자바를 이용한 데이터베이스 접속과 SQL 문장의 실행, 그리고 실행 결과로 얻어진 데이터의 핸들링을 제공하는 방법과 절차에 관한 규약
- 자바 프로그램 내에서 SQL문을 실행하기 위한 자바 API
- SQL과 프로그래밍 언어의 통합 접근 중 한 형태

JAVA는 표준 인터페이스인 JDBC API를 제공
데이터베이스 벤더, 또는 기타 써드파티에서는 JDBC 인터페이스를 구현한 드라이버(driver)를 제공한다.